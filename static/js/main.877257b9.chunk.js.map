{"version":3,"sources":["components/Board.module.scss","components/Footer.module.css","components/PokemonSpinner.module.css","components/PokemonSpinner.tsx","components/CardFront.tsx","components/CardShirt.tsx","img/shirtPixel.png","components/Card.tsx","components/Board.tsx","components/Menu.tsx","components/Game.tsx","img/Octocat.png","img/rs_school_js.svg","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","PokemonSpiner","className","s","container","pokemonSpiner","CardFront","src","alt","style","name","CardShirt","Card","img","isFlipped","onClick","id","shirtPixel","Board","pokemons","loading","useState","pokemonsProps","setPokemonsProps","canClickBoard","setCanClickBoard","grey","colorBoard","setColorBoard","idPokemon","firstCard","setFirstCard","secondCard","setSecondCard","twoCard","setTwocard","setCardIsFlipped","CardID","canFlip","prev","map","c","ResetCard","useEffect","setTimeout","index","forEach","pokemon","length","red","green","boardContainer","blockBoard","alert","onCardClick","Menu","shuffleArray","array","sort","Math","random","randomInteger","min","max","rand","floor","fetchPokemonData","url","a","fetch","json","pokemonJson","Game","string","setPokemons","setGameStart","setLoading","pokemonData","Promise","all","results","onePokemon","arrPokemons","CopyArrPokemons","slice","DoubleArrPokemon","concat","NewPokemonArr","varieble","obj","uuid","push","loadPokemon","then","arrPokemon","imgRsSchool","backgroundImage","logoRsSchool","imgGitHub","logoGithub","Footer","footer","href","link","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.877257b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"boardContainer\":\"Board_boardContainer__1yaVW\",\"grey\":\"Board_grey__bPW4n\",\"red\":\"Board_red__1Jbh4\",\"green\":\"Board_green__19aEv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2NNgL\",\"link\":\"Footer_link__1NGbN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PokemonSpinner_container__2gMzm\",\"pokemonSpiner\":\"PokemonSpinner_pokemonSpiner__1nXgv\",\"spin\":\"PokemonSpinner_spin__37gzF\"};","import React from 'react';\nimport s from './PokemonSpinner.module.css'\n\n\nexport default function PokemonSpiner() {\n\n  return (\n    <div className={s.container}>\n      <div className={s.pokemonSpiner}>\n      </div>\n    </div>\n  )\n\n}","import React, { useEffect, useState } from 'react';\n\n\nexport const CardFront = ({ src, alt = \"\", style = {}, className = \"\", name , ...props }: any) => {\n  return (\n    <div>\n      {name}\n      <div className = \"card-img-block\">\n      <img alt={alt} style={style} className={className} src={src} />\n      </div>\n      text\n    </div>\n    )\n}","import React, { useEffect, useState } from 'react';\n\n\nexport const CardShirt = ({ src, alt = \"\", style = {}, className = \"\", ...props }: any) => {\n  return (\n    <img alt={alt} style={style} className={className} src={src} />);\n}","export default __webpack_public_path__ + \"static/media/shirtPixel.21b22d7e.png\";","import React, { useEffect, useState } from 'react';\n\nimport {CardFront} from './CardFront';\nimport {CardShirt} from './CardShirt';\n\nimport shirt from '../img/shirt.png'\nimport shirtPixel from '../img/shirtPixel.png'\n\ntype CardProps = {\n  img: string,\n  idPokemon: number,\n  id: number,\n  canFlip: boolean,\n  isFlipped: boolean,\n  name: string,\n  onClick: ((card:object) => {})\n}\n\nexport const Card = ({img, isFlipped, name, id, onClick}:CardProps ) => {\n\n  return (<div className=\"card-container\">\n    <div className={\"card\" + (isFlipped ? \" flipped\" : \"\")} onClick={onClick}>\n      <CardFront className=\"side front\" src={img} name={name}/>\n      <CardShirt className=\"side back\" src={shirtPixel} />\n    </div>\n  </div>)\n}","import { useEffect, useState } from \"react\";\nimport { Card } from \"./Card\"\nimport s from './Board.module.scss'\n\ntype BoardProps = {\n  pokemons: Array<any>,\n  loading: boolean\n}\n\ninterface pokemonsPropsTypes {\n  [key: number]: {\n    idPokemon: number,\n    id: number,\n    canFlip: boolean,\n    isFlipped: boolean,\n    name: string,\n  }\n}\n\ninterface firstCard {\n  idPokemon: number | null,\n  id: number | null,\n}\n\nexport const Board = ({ pokemons, loading}: BoardProps) => {\n  const [pokemonsProps, setPokemonsProps] = useState<Array<pokemonsPropsTypes>>(pokemons)\n  const [canClickBoard, setCanClickBoard] = useState<boolean | null>(false);\n  const [colorBoard, setColorBoard] = useState(s.grey)\n\n  const [firstCard, setFirstCard] = useState<firstCard>({\n    idPokemon: null,\n    id: null,\n  });\n  const [secondCard, setSecondCard] = useState<firstCard>({\n    idPokemon: null,\n    id: null,\n  });\n\n  const [twoCard, setTwocard] = useState<boolean>(()=>false)\n\n  function setCardIsFlipped(CardID: any, isFlipped: any, canFlip:boolean) {\n    setPokemonsProps(\n      (prev: any): any => {\n        return (prev.map((c: any): any => {\n          if (c.id !== CardID) {\n            return c\n          };\n          return { ...c, isFlipped, canFlip};\n        })\n        )\n      })\n  }\n\n  useEffect((): void => {\n    setTimeout(() => {\n      let index = 0;\n\n      pokemonsProps.forEach((pokemon: any) => {\n        setTimeout(() => setCardIsFlipped(pokemon.id, true, true), index++ * 100);\n      });\n      setTimeout(() => setCanClickBoard(true), pokemonsProps.length * 100);\n    }, 3000);\n  }, [])\n\n\n  useEffect(()=>{\n    {firstCard.idPokemon !== secondCard.idPokemon ? setColorBoard(s.red):setColorBoard(s.green)}\n    setCanClickBoard(false)\n    setTimeout(() => {  \n      if (firstCard.idPokemon !== secondCard.idPokemon) {\n        Lose()\n        ResetCard()\n        return\n      }\n      if (firstCard.idPokemon == secondCard.idPokemon) {\n        ResetCard()\n      }\n    }, 1000);\n  },[twoCard])\n\n  function Lose() {\n    setCardIsFlipped(firstCard.id, true, true)\n    setCardIsFlipped(secondCard.id, true, true)\n  }\n\n  function ResetCard(){\n    setFirstCard({\n      idPokemon: null,\n      id: null,\n    })\n    setSecondCard({\n      idPokemon: null,\n      id: null,\n    })\n    setCanClickBoard(true)\n  }\n\n\n  function onCardClick({ idPokemon, id, canFlip, isFlipped }: any) {\n    if (!canClickBoard)\n      return;\n    if (!canFlip){\n      alert('you chose this card')\n      return;\n    }\n      \n    if (isFlipped == true) {\n      setCardIsFlipped(id, false, false)\n    }\n\n    if (firstCard.id == null) {\n      setFirstCard({\n        id: id,\n        idPokemon: idPokemon\n      })\n      return\n    } else {\n      setSecondCard({\n        id: id,\n        idPokemon: idPokemon\n      })\n      setTwocard(!twoCard)\n    }\n  }\n\n\n  return (<div className={s.boardContainer + (canClickBoard ? \"\" : ` ${s.blockBoard} ${colorBoard}`)}>\n    {pokemonsProps.map((pokemon: any) => {\n      return (<Card\n        onClick={() => onCardClick(pokemon)}\n        isFlipped={pokemon.isFlipped}\n        key={pokemon.id}\n        // img={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.idPokemon}.png`}\n        img={`https://www.serebii.net/pokemongo/pokemon/${pokemon.idPokemon}.png`}\n        {...pokemon}\n      />)\n    })}\n  </div>);\n}","import React, { useEffect, useState } from \"react\";\n\n\nexport const Menu = ({onClick}: any) => {\n    return (\n        <div>\n            <button onClick={()=>{onClick()}}>Start</button>\n            <button>FullScreen</button>\n        </div>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport PokemonSpiner from \"./PokemonSpinner\"\nimport { v4 as uuid } from \"uuid\";\nimport deepcopy from \"deepcopy\";\nimport { Board } from \"./Board\";\nimport { Menu } from \"./Menu\";\nimport { resolve } from \"dns\";;\n\n\n\n//Sort Random Func\nfunction shuffleArray(array: Array<object | string>) {\n  return array.sort(() => 0.5 - Math.random());\n}\n\n//Random Number from Min to Max\nfunction randomInteger(min: number, max: number) {\n  let rand = min + Math.random() * (max + 1 - min);\n  return Math.floor(rand);\n}\n\nasync function fetchPokemonData(url: string) {\n  const pokemon = await fetch(url);\n  const pokemonJson = await pokemon.json();\n  return pokemonJson;\n}\n\ntype GameProps = {\n  string: string;\n};\n\nexport const Game = ({ string }: GameProps) => {\n  const [pokemons, setPokemons] = useState([]);\n  const [gameStart, setGameStart] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n\n  function start(){\n    async function loadPokemon(): Promise<any> {\n      const pokemonData = await fetch(\n        `https://pokeapi.co/api/v2/pokemon-form?offset=${randomInteger(\n          50,\n          867\n        )}&limit=6`\n      );\n      const pokemon = await pokemonData.json();\n      const arrPokemons = await Promise.all(\n        pokemon.results.map(\n          async (onePokemon: any) => await fetchPokemonData(onePokemon.url)\n        )\n      );\n      let CopyArrPokemons = arrPokemons.slice();\n      let DoubleArrPokemon = arrPokemons.concat(CopyArrPokemons);\n      let NewPokemonArr: any = [];\n      let varieble: any;\n      for (varieble of DoubleArrPokemon) {\n        let obj = {\n          idPokemon: varieble.id,\n          name: varieble.name,\n          isFlipped: false,\n          canFlip: true,\n          id: uuid(),\n        };\n        NewPokemonArr.push(obj);\n      }\n\n      return shuffleArray(NewPokemonArr);\n    }\n\n    loadPokemon().then((arrPokemon) => {\n      setPokemons(arrPokemon);\n      setGameStart(true)\n      setLoading(!loading);\n    });\n  }\n\n\n  return (\n    <div>\n      <Menu onClick={start}/>\n      {loading ? <Board pokemons={pokemons} loading={loading}/> : <PokemonSpiner />}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/Octocat.363cb5ed.png\";","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","import { FunctionComponent } from \"react\";\nimport s from './Footer.module.css'\nimport logoGithub from '../img/Octocat.png'\nimport logoRsSchool from '../img/rs_school_js.svg'\n\nconst imgRsSchool: any = {\n  backgroundImage: `url(${logoRsSchool})` \n};\n\nconst imgGitHub: any = {\n  'background-image': `url(${logoGithub})`\n}\n\nexport const Footer: FunctionComponent = () => {\n\n\n\n  return (\n    <div className={s.footer}> \n      <a href=\"https://github.com/ratomsky/react-game/pulls\" ><div className={s.link + ' dasd'} style={imgGitHub}> </div></a>\n      <div className={s.link} style={imgRsSchool}> <a href=\"#\" /></div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { Game } from './components/Game';\n\n// import './components/Card.scss'\nimport './components/Card.scss'\nimport { Footer } from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game string={'String'}/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}