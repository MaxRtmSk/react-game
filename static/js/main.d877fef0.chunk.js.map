{"version":3,"sources":["components/CardFront.tsx","components/CardShirt.tsx","img/shirtPixel.png","components/Card.tsx","components/Board.tsx","components/PokemonSpinner.tsx","components/Game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CardFront","src","alt","style","className","name","CardShirt","Card","img","isFlipped","onClick","id","shirtPixel","Board","pokemons","useState","pokemonsProps","setPokemonsProps","canFlipBoard","setCanFlipBoard","idPokemon","firstCard","setFirstCard","secondCard","setSecondCard","twoCard","setTwocard","setCardIsFlipped","CardID","prev","map","c","ResetCard","useEffect","setTimeout","index","forEach","pokemon","length","canFlip","onCardClick","PokemonSpiner","shuffleArray","array","sort","Math","random","randomInteger","min","max","rand","floor","fetchPokemonData","url","a","fetch","json","pokemonJson","Game","string","setPokemons","loading","setLoading","pokemonData","Promise","all","results","onePokemon","arrPokemons","CopyArrPokemons","slice","DoubleArrPokemon","concat","NewPokemonArr","varieble","obj","uuid","push","loadPokemon","then","arrPokemon","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d877fef0.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n\r\nexport const CardFront = ({ src, alt = \"\", style = {}, className = \"\", name , ...props }: any) => {\r\n  return (\r\n    <div>\r\n      {name}\r\n      <div className = \"card-img-block\">\r\n      <img alt={alt} style={style} className={className} src={src} />\r\n      </div>\r\n      text\r\n    </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nexport const CardShirt = ({ src, alt = \"\", style = {}, className = \"\", ...props }: any) => {\r\n  return (\r\n    <img alt={alt} style={style} className={className} src={src} />);\r\n}","export default __webpack_public_path__ + \"static/media/shirtPixel.21b22d7e.png\";","import React, { useEffect, useState } from 'react';\r\n\r\nimport {CardFront} from './CardFront';\r\nimport {CardShirt} from './CardShirt';\r\n\r\nimport shirt from '../img/shirt.png'\r\nimport shirtPixel from '../img/shirtPixel.png'\r\n\r\ntype TestCard = {\r\n  img: string,\r\n  idPokemon: number,\r\n  id: number,\r\n  canFlip: boolean,\r\n  isFlipped: boolean,\r\n  name: string,\r\n  onClick: ((card:object) => {})\r\n}\r\n\r\nexport const Card = ({img, isFlipped, name, id, onClick}:TestCard ) => {\r\n\r\n  return (<div className=\"card-container\">\r\n    <div className={\"card\" + (isFlipped ? \" flipped\" : \"\")} onClick={onClick}>\r\n      <CardFront className=\"side front\" src={img} name={name}/>\r\n      <CardShirt className=\"side back\" src={shirtPixel} />\r\n    </div>\r\n  </div>)\r\n}","import { error } from \"console\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Card } from \"./Card\"\r\n\r\n\r\ntype BoardProps = {\r\n  pokemons: Array<any>\r\n}\r\n\r\ninterface pokemonsPropsTypes {\r\n  [key: number]: {\r\n    idPokemon: number,\r\n    id: number,\r\n    canFlip: boolean,\r\n    isFlipped: boolean,\r\n    name: string,\r\n  }\r\n}\r\n\r\ninterface firstCard {\r\n  idPokemon: number | null,\r\n  id: number | null,\r\n}\r\n\r\nexport const Board = ({ pokemons }: BoardProps) => {\r\n  const [pokemonsProps, setPokemonsProps] = useState<Array<pokemonsPropsTypes>>(pokemons)\r\n  const [canFlipBoard, setCanFlipBoard] = useState<boolean | null>(false);\r\n\r\n  const [firstCard, setFirstCard] = useState<firstCard>({\r\n    idPokemon: null,\r\n    id: null,\r\n  });\r\n  const [secondCard, setSecondCard] = useState<firstCard>({\r\n    idPokemon: null,\r\n    id: null,\r\n  });\r\n\r\n  const [twoCard, setTwocard] = useState(false)\r\n\r\n  function setCardIsFlipped(CardID: any, isFlipped: any) {\r\n    setPokemonsProps(\r\n      (prev: any): any => {\r\n        return (prev.map((c: any): any => {\r\n          if (c.id !== CardID) {\r\n            return c\r\n          };\r\n          return { ...c, isFlipped };\r\n        })\r\n        )\r\n      })\r\n  }\r\n\r\n  useEffect((): void => {\r\n    setTimeout(() => {\r\n      let index = 0;\r\n\r\n      pokemonsProps.forEach((pokemon: any) => {\r\n        setTimeout(() => setCardIsFlipped(pokemon.id, true), index++ * 100);\r\n      });\r\n      setTimeout(() => setCanFlipBoard(true), pokemonsProps.length * 100);\r\n    }, 3000);\r\n  }, [])\r\n\r\n\r\n  useEffect(()=>{\r\n    setTimeout(() => {\r\n      if (firstCard.idPokemon !== secondCard.idPokemon) {\r\n        Lose()\r\n        return\r\n      }\r\n      if (firstCard.idPokemon == secondCard.idPokemon) {\r\n        ResetCard()\r\n      }\r\n    }, 1000);\r\n  },[twoCard])\r\n\r\n  function Lose() {\r\n    setCardIsFlipped(firstCard.id, true)\r\n    setCardIsFlipped(secondCard.id, true)\r\n    ResetCard()\r\n  }\r\n\r\n  function ResetCard(){\r\n    setFirstCard({\r\n      idPokemon: null,\r\n      id: null,\r\n    })\r\n    setSecondCard({\r\n      idPokemon: null,\r\n      id: null,\r\n    })\r\n  }\r\n\r\n  function onCardClick({ idPokemon, id, canFlip, isFlipped }: any) {\r\n    if (!canFlipBoard)\r\n      return;\r\n    if (!canFlip)\r\n      return;\r\n\r\n    if (isFlipped == true) {\r\n      setCardIsFlipped(id, false)\r\n    }\r\n\r\n    if (firstCard.id == null) {\r\n      setFirstCard({\r\n        id: id,\r\n        idPokemon: idPokemon\r\n      })\r\n      return\r\n    } else {\r\n      setSecondCard({\r\n        id: id,\r\n        idPokemon: idPokemon\r\n      })\r\n      setTwocard(!twoCard)\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  return (<div className={\"board-container\" + (canFlipBoard ? \"\" : \" blockBoard\")}>\r\n    {pokemonsProps.map((pokemon: any) => {\r\n      return (<Card\r\n        onClick={() => onCardClick(pokemon)}\r\n        isFlipped={pokemon.isFlipped}\r\n        key={pokemon.id}\r\n        // img={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.idPokemon}.png`}\r\n        img={`https://www.serebii.net/pokemongo/pokemon/${pokemon.idPokemon}.png`}\r\n        {...pokemon}\r\n      />)\r\n    })}\r\n  </div>);\r\n}","import React from 'react';\r\n\r\n\r\nexport default function PokemonSpiner() {\r\n\r\n  return (\r\n    <div className=\"pokemonSpiner-container\">\r\n      <div className=\"pokemonSpiner\">\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { v4 as uuid } from \"uuid\";\r\nimport deepcopy from \"deepcopy\";\r\nimport { Board } from './Board';\r\nimport { resolve } from 'dns';\r\nimport PokemonSpiner from './PokemonSpinner';\r\n\r\n//Sort Random Func\r\nfunction shuffleArray(array: Array<object | string>) {\r\n  return array.sort(() => .5 - Math.random());\r\n}\r\n\r\n//Random Number from Min to Max\r\nfunction randomInteger(min: number, max: number) {\r\n  let rand = min + Math.random() * (max + 1 - min);\r\n  return Math.floor(rand);\r\n}\r\n\r\n\r\nasync function fetchPokemonData(url: string) {\r\n  const pokemon = await fetch(url);\r\n  const pokemonJson = await pokemon.json();\r\n  return pokemonJson;\r\n}\r\n\r\n\r\n\r\ntype GameProps = {\r\n  string: string\r\n}\r\n\r\nexport const Game = ({ string }: GameProps) => {\r\n\r\n  const [pokemons, setPokemons] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  \r\n  useEffect(() => {\r\n    async function loadPokemon(): Promise<any> {\r\n      //9\r\n      const pokemonData = await fetch(`https://pokeapi.co/api/v2/pokemon-form?offset=${randomInteger(50, 867)}&limit=6`)\r\n      const pokemon = await pokemonData.json();\r\n      const arrPokemons = await Promise.all(\r\n        pokemon.results.map(\r\n          async (onePokemon: any) => await fetchPokemonData(onePokemon.url)\r\n        )\r\n      );\r\n      let CopyArrPokemons = arrPokemons.slice()\r\n      let DoubleArrPokemon = arrPokemons.concat(CopyArrPokemons)\r\n      let NewPokemonArr: any = []\r\n      let varieble: any\r\n      for (varieble of DoubleArrPokemon) {\r\n        let obj = {\r\n          idPokemon: varieble.id,\r\n          name: varieble.name,\r\n          isFlipped: false,\r\n          canFlip: true,\r\n          id: uuid()\r\n        }\r\n        NewPokemonArr.push(obj)\r\n      }\r\n\r\n      return shuffleArray(NewPokemonArr)\r\n    }\r\n\r\n    loadPokemon().then((arrPokemon) => {\r\n      setPokemons(arrPokemon)\r\n      setLoading(!loading)\r\n    })\r\n\r\n\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  if (loading == false) {\r\n    return <PokemonSpiner/>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Board pokemons={pokemons} />\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport './App.css';\nimport { Game } from './components/Game';\n\n// import './components/Card.scss'\nimport './components/Card.scss'\nimport './components/Board.scss'\nimport './components/PokemonSpinner.scss'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game string={'String'}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}